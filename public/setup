#!/bin/bash
# Online script for install dots-hyprland.

me="-->online-setup<--"
remote_repo=end-4/dots-hyprland
set -e
function try { "$@" || sleep 0; }
function x() {
  if "$@";then local cmdstatus=0;else local cmdstatus=1;fi # 0=normal; 1=failed; 2=failed but ignored
  while [ $cmdstatus == 1 ] ;do
    echo -e "\e[31m$me: Command \"\e[32m$@\e[31m\" has failed."
    echo -e "You may need to resolve the problem manually BEFORE repeating this command.\e[0m"
    echo "  r = Repeat this command (DEFAULT)"
    echo "  e = Exit now"
    read -p " [R/e]: " p
    case $p in
      [eE]) echo -e "\e[34mAlright, will exit.\e[0m";break;;
      *) echo -e "\e[34mOK, repeating...\e[0m"
         if "$@";then local cmdstatus=0;else local cmdstatus=1;fi
         ;;
    esac
  done
  case $cmdstatus in
    0) echo -e "\e[34m$me: Command \"\e[32m$@\e[34m\" finished.\e[0m";;
    1) echo -e "\e[31m$me: Command \"\e[32m$@\e[31m\" has failed. Exiting...\e[0m";exit 1;;
  esac
}
function detect_distro_id(){
  export OS_RELEASE_FILE=${OS_RELEASE_FILE:-/etc/os-release}
  test -f ${OS_RELEASE_FILE} || ( echo "${OS_RELEASE_FILE} does not exist. Aborting..." ; exit 1 ; )
  export OS_DISTRO_ID=$(awk -F'=' '/^ID=/ { gsub("\"","",$2); print tolower($2) }' ${OS_RELEASE_FILE} 2> /dev/null)
  export OS_DISTRO_ID_LIKE=$(awk -F'=' '/^ID_LIKE=/ { gsub("\"","",$2); print tolower($2) }' ${OS_RELEASE_FILE} 2> /dev/null)
  echo "$me: OS_DISTRO_ID: $OS_DISTRO_ID"
  echo "$me: OS_DISTRO_ID_LIKE: $OS_DISTRO_ID_LIKE"
}
function auto_install_git(){
  echo "$me: Detecting command \"git\"..."
  command -v git && return
  echo "$me: Command \"git\" not found, try to install..."

  if [[ "$OS_DISTRO_ID" == "arch" || "$OS_DISTRO_ID_LIKE" == "arch" || "$OS_DISTRO_ID" == "cachyos" ]]; then
    x sudo pacman -Syu
    x sudo pacman -S --noconfirm git
  elif [[ "$OS_DISTRO_ID" == "debian" || "$OS_DISTRO_ID_LIKE" == "debian" ]]; then
    x sudo apt install git
  elif [[ "$OS_DISTRO_ID" == "gentoo" ]]; then
    x sudo emerge --sync
    x sudo emerge -auvDN @world
    x sudo emerge dev-vcs/git
  fi

  command -v git && return
  echo "$me: Failed in installing Git. Please install Git by yourself and then retry. Aborting..."
  exit 1
}

if [ -z "$1" ]; then
  path=~/.cache/dots-hyprland
else
  path="$1"
fi

detect_distro_id
auto_install_git
echo "$me: Downloading repo to $path ..."
x mkdir -p $path
x cd $path
if [ -z "$(ls -A)" ]; then
  x git init -b main
  x git remote add origin https://github.com/$remote_repo
fi
git remote get-url origin|grep -q $remote_repo || { echo "Dir \"$path\" is not empty, nor a git repo of $remote_repo. Aborting..."; exit 1 ; }
x git pull origin main && git submodule update --init --recursive
echo "$me: Downloaded."
echo "$me: Running \"./setup install\"."
x ./setup install || { echo "$me: Error occured when running \"./setup install\"."; exit 1 ; }
